#############################################################################

####### Compiler, tools and options

CXX	=	$(SYSCONF_CXX) $(QT_CXX_MT)
CXXFLAGS=	$(SYSCONF_CXXFLAGS_QT) $(SYSCONF_CXXFLAGS)
CC	=	$(SYSCONF_CC) $(QT_C_MT)
CFLAGS	=	$(SYSCONF_CFLAGS)
INCPATH =	-I../library
LFLAGS	=	$(SYSCONF_LFLAGS_QT) $(SYSCONF_RPATH_QT) $(SYSCONF_LFLAGS) $(QT_LFLAGS_MT)
LIBS	=	$(SUBLIBS) -lqpe $(SYSCONF_LIBS_QT) $(SYSCONF_LIBS) $(SYSCONF_LIBS_QTAPP)
MOC	=	$(SYSCONF_MOC)
UIC	=	$(SYSCONF_UIC)

####### Target

DESTDIR = ../bin/
VER_MAJ = 1
VER_MIN = 0
VER_PATCH = 0
TARGET	= parashoot
TARGET1 = lib$(TARGET).so.$(VER_MAJ)

####### Files

HEADERS =	interface.h \
		man.h \
		cannon.h \
		base.h \
		bullet.h \
		helicopter.h
SOURCES =	main.cpp \
		interface.cpp \
		man.cpp \
		cannon.cpp \
		base.cpp \
		bullet.cpp \
		helicopter.cpp
OBJECTS =	main.o \
		interface.o \
		man.o \
		cannon.o \
		base.o \
		bullet.o \
		helicopter.o
INTERFACES =    
UICDECLS =      
UICIMPLS =      
SRCMOC	=	moc_interface.cpp \
		moc_cannon.cpp \
		moc_bullet.cpp
OBJMOC	=	moc_interface.o \
		moc_cannon.o \
		moc_bullet.o


####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(DESTDIR)$(TARGET)

$(DESTDIR)$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS)
	$(SYSCONF_LINK) $(LFLAGS) -o $(DESTDIR)$(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile.in

Makefile.in: parashoot.pro
	tmake parashoot.pro -o Makefile.in

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS)
	-rm -f *~ core
	-rm -f allmoc.cpp

####### Extension Modules

listpromodules:
	@echo 

listallmodules:
	@echo 

listaddonpromodules:
	@echo 

listaddonentmodules:
	@echo 


REQUIRES=

####### Sub-libraries


###### Combined headers



####### Compile

main.o: main.cpp \
		../library/qpeapplication.h \
		../library/qpedecoration_qws.h \
		interface.h \
		cannon.h \
		bullet.h \
		../library/sound.h \
		base.h \
		helicopter.h

interface.o: interface.cpp \
		interface.h \
		cannon.h \
		bullet.h \
		../library/sound.h \
		base.h \
		helicopter.h \
		man.h \
		../library/resource.h

man.o: man.cpp \
		codes.h \
		man.h \
		../library/sound.h \
		base.h \
		../library/resource.h

cannon.o: cannon.cpp \
		codes.h \
		cannon.h \
		bullet.h \
		../library/sound.h \
		../library/resource.h

base.o: base.cpp \
		codes.h \
		base.h \
		../library/sound.h \
		man.h \
		../library/resource.h

bullet.o: bullet.cpp \
		../library/qmath.h \
		codes.h \
		bullet.h \
		../library/sound.h \
		man.h \
		helicopter.h \
		../library/resource.h

helicopter.o: helicopter.cpp \
		helicopter.h \
		../library/sound.h \
		man.h \
		codes.h \
		../library/resource.h

moc_interface.o: moc_interface.cpp \
		interface.h \
		cannon.h \
		bullet.h \
		../library/sound.h \
		base.h \
		helicopter.h

moc_cannon.o: moc_cannon.cpp \
		cannon.h \
		bullet.h \
		../library/sound.h

moc_bullet.o: moc_bullet.cpp \
		bullet.h \
		../library/sound.h

moc_interface.cpp: interface.h
	$(MOC) interface.h -o moc_interface.cpp

moc_cannon.cpp: cannon.h
	$(MOC) cannon.h -o moc_cannon.cpp

moc_bullet.cpp: bullet.h
	$(MOC) bullet.h -o moc_bullet.cpp


