#!/bin/sh

QTE_VERSION=2.3.2
DEB_VERSION=2.0

# Have to do this here, since CVS can't store symlinks
mkdir -p etc/rc2.d
rm -f etc/rc2.d/S98qpe
ln -s ../init.d/qpe etc/rc2.d/S98qpe

VERSION_MAJ=$(sed -n -e 's/.*QPE_VERSION "\([0-9]*\)\..*\..*".*/\1/p' <library/version.h)
VERSION_MIN=$(sed -n -e 's/.*QPE_VERSION ".*\.\([0-9]*\)\..*".*/\1/p' <library/version.h)
VERSION_PAT=$(sed -n -e 's/.*QPE_VERSION ".*\..*\.\([0-9]*\).*/\1/p' <library/version.h)
if grep -q 'QPE_VERSION .*snapshot' library/version.h
then
    VERSION_CVS="_$(date +%Y%m%d)"
else
    VERSION_CVS=""
fi

QPE_VERSION=$VERSION_MAJ.$VERSION_MIN.$VERSION_PAT

ARCH=arm
STRIP=arm-linux-strip
STRIP_FILES="*Advanced RISC Machines ARM*not stripped"

TDIR=/tmp/ipk$$
DATADIR=$TDIR/data
CTRLDIR=$TDIR/control


if [ "$1" = -v ]
then
    shift
    VERB=1
    echo >&2 "Packaging for version $VERSION_MAJ.$VERSION_MIN.$VERSION_PAT$VERSION_CVS"
else
    VERB=
fi

if [ "$1" = -l ]
then
    shift
    LIST=1
else
    LIST=
fi

FILES=$*

if [ -z "$FILES" ]
then
    FILES=`find . -name "*.control" -print`
fi


for i in $FILES
do
    rm -rf $TDIR

    mkdir -p $DATADIR
    mkdir -p $CTRLDIR

    packagename=${i##*/}; packagename=${packagename%.control}
    version=$(eval echo '"'$(sed -n -e "s/^Version: *//p" $i)'"')
    depends=$(eval echo '"'$(sed -n -e "s/^Depends: *//p" $i)'"')
    files=$(eval echo $(sed -n -e "s/^Files://p" $i))
    package=${packagename}_${version}_$ARCH
    ERROR=
    if [ -z "$files" ]
    then
	mkdir -p $DATADIR/usr/share/doc/$packagename
    else
	for f in $files
	do
	    if [ -d $f ]
	    then
		ffiles=$(find $f -type f -o -type b -o -type c -o -type l)
	    else
		ffiles=$f
	    fi
	    for ff in $ffiles
	    do
		case $ff in
		    */CVS/*)
		    continue
		;;	*~)
		    continue
		;;	*.control)
		    continue
		;; $QTDIR/*)
		    BASE=$(dirname /usr/${ff#$QTDIR/})
		;; etc/*.d/*)
		    BASE=$(dirname /$ff)
		;; ipaq/*)
		    BASE=$(dirname ${ff#ipaq})
		;; *)
		    BASE=/opt/QtPalmtop/$(dirname $ff)
		esac

		if [ -f $ff -o -b $ff -o -c $ff ]
		then
		    D=$DATADIR$BASE
		    if [ -x $ff -a -n "$STRIP" ]
		    then
			case $(file $ff) in
			 $STRIP_FILES)
			    $STRIP $ff
			 ;; *)
			esac
		    fi
		    mkdir -p $D
		    if cp -a $ff $D
		    then
			true
		    else
			ERROR=1
		    fi
		else
		    echo >&2 "$0: $i: No such file: $ff"
		    ERROR=1
		fi
	    done
	done
    fi
    if [ -z "$ERROR" ]
    then
	#size=$(du -h -s $DATADIR | sed -e 's/[	 ].*//')
	size=$(mkfs.jffs2 -r $DATADIR | wc -c)
	echo "Package: $packagename" >$CTRLDIR/control
	echo "Installed-Size: $size" >>$CTRLDIR/control
	echo "Filename: ./$package.ipk" >>$CTRLDIR/control
	echo "Version: $version" >>$CTRLDIR/control
	echo "Depends: $depends" >>$CTRLDIR/control
	egrep -v "^(Files|Version|Depends):" >>$CTRLDIR/control $i
	echo "$DEB_VERSION" >$TDIR/debian-binary
	base=${i%.control}
	scripts="preinst postinst prerm postrm"
	for pf in $scripts
	do
	    if [ -x ${base}.$pf ]
	    then
		cp ${base}.$pf $CTRLDIR/$pf
	    fi
	done
	if [ "$UID" = 0 ]
	then
	    chown -R root.root $TDIR
	fi
	( cd $CTRLDIR; tar cfz ../control.tar.gz ./*; )
	( cd $DATADIR; tar cfz ../data.tar.gz ./*; )
	( cd $TDIR; rm -rf control data; tar cf - ./debian-binary ./control.tar.gz ./data.tar.gz; ) | gzip >$package.ipk
	if [ -n "$VERB" ]
	then
	    echo >&2 "Built $package.ipk ($size)"
	fi
	if [ -n "$LIST" ]
	then
	    echo $package.ipk
	fi
    else
	echo >&2 "Not building $package.ipk"
    fi
done
